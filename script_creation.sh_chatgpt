#!/usr/bin/env bash

# ===========================
# Example Bash Script
# Version: 0.1
# ===========================

# Global Variables
DEBUG_MODE=0
SCRIPT_VERSION="0.1"
SCRIPT_NAME="$(basename "$0")"

# Functions

# Print usage information
usage() {
    echo "Usage: $SCRIPT_NAME [options]"
    echo "Options:"
    echo "  -h, --help        Show this help message and exit"
    echo "  -v, --version     Display the script version and exit"
    echo "  -d, --debug       Enable debug mode (shows debug messages)"
}

# Print the script version
version() {
    echo "$SCRIPT_NAME version $SCRIPT_VERSION"
}

# Debug function to display debug messages only when debug mode is enabled
debug() {
    if [ "$DEBUG_MODE" -eq 1 ]; then
        echo "DEBUG: $*"
    fi
}

# Example function encapsulating the main logic
unset -f script_creation
script_creation() {
    # Load an error function (example, assumes error.sh exists)
    if [ -f "error.sh" ]; then
        # shellcheck source=/dev/null
        . error.sh
    else
        error() {
            echo "ERROR: $*" >&2
        }
    fi

    # Banner to differentiate runs
    echo "============== $(date '+%H:%M:%S') =============="

    # Debug message
    debug "This is at the beginning of the run."

    # Enable bash debugging for a specific block
    set -xv

    # Example variable usage
    myvar="Hello World"

    # Thoroughly examine the variable contents
    debug "Examining variable myvar:"
    xxd -g 1 <<< "$myvar"

    # Perform some operations with error handling
    echo "$myvar"
    result=$?
    if [ $result -gt 0 ]; then
        error "This is a test error message."
        return $result
    fi

    # Disable bash debugging
    set +xv

    # Debug message indicating end of function
    debug "Exiting script_creation function."
}
declare -f script_creation

# Parse command-line arguments
while [ "$#" -gt 0 ]; do
    case "$1" in
        -h|--help)
            usage
            exit 0
            ;;
        -v|--version)
            version
            exit 0
            ;;
        -d|--debug)
            DEBUG_MODE=1
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Unknown option: $1"
            usage
            exit 1
            ;;
    esac
    shift
done

# Run the main function
script_creation "$@"

